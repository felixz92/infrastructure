---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: authentik-tls-certificate
spec:
  secretName: tls-authentik-ingress
  secretTemplate:
    labels:
      velero.io/include: "true"
  issuerRef:
    name: dns-clusterissuer
    kind: ClusterIssuer
  dnsNames:
    - authentik.${BASE_DOMAIN}
---
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: authentik-gateway
spec:
  gatewayClassName: traefik
  listeners:
    - name: websecure
      port: 8443
      protocol: HTTPS
      hostname: authentik.${BASE_DOMAIN}
      tls:
        certificateRefs:
          - name: tls-authentik-ingress  # <==== Use the name defined in Certificate resource.
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: authentik-http
spec:
  parentRefs:
    - name: authentik-gateway
  hostnames:
    - authentik.${BASE_DOMAIN}
  rules:
    - matches:
        - path:
            type: PathPrefix
            value: /
      backendRefs:
        - name: authentik-server
          port: 80
          weight: 1
      filters:
        - type: ResponseHeaderModifier
          responseHeaderModifier:
            add:
              - name: Content-Security-Policy
                value: "default-src 'self'; img-src https: http: data:; object-src 'none'; style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline';"