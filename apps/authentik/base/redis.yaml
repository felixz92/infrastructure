---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: redis-password
spec:
  secretStoreRef:
    name: cluster-store
    kind: ClusterSecretStore
  target:
    name: redis-password
  data:
    - secretKey: password
      remoteRef:
        key: authentik-redis-password
        property: password
---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: redis
spec:
  interval: 10m
  type: oci
  url: oci://registry-1.docker.io/bitnamicharts
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: redis
spec:
  interval: 5m
  releaseName: authentik-redis
  chart:
    spec:
      chart: redis
      version: 20.6.3
      sourceRef:
        kind: HelmRepository
        name: redis
      interval: 10m
  values:
    image:
      registry: docker.io
      repository: bitnami/redis
      tag: 7.4.2-debian-12-r0
    architecture: standalone
    auth:
      enabled: true
      sentinel: true
      existingSecret: redis-password
      existingSecretPasswordKey: password

    master:
      resources:
        requests:
          cpu: 101m
          memory: 128Mi
        limits:
          memory: 128Mi
      podSecurityContext:
        enabled: true
        fsGroup: 1001
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      kind: Deployment
      persistence:
        enabled: true
        accessModes:
          - ReadWriteOnce
        size: 8Gi
      extraFlags:
        - "--maxmemory-policy allkeys-lru"
        - "--maxmemory 100mb"

    metrics:
      enabled: true
      image:
        registry: docker.io
        repository: bitnami/redis-exporter
        tag: 1.54.0-debian-11-r0
      resources:
        requests:
          cpu: 100m
          memory: 128Mi
        limits:
          memory: 128Mi

      serviceMonitor:
        enabled: true

      prometheusRule:
        enabled: true
        rules:
          - alert: RedisDown
            expr: redis_up{service="{{ template "common.names.fullname" . }}-metrics"} == 0
            for: 2m
            labels:
              severity: error
            annotations:
              summary: Redis&reg; instance {{ "{{ $labels.instance }}" }} down
              description: Redis&reg; instance {{ "{{ $labels.instance }}" }} is down
          - alert: RedisMemoryHigh
            expr: >
              redis_memory_used_bytes{service="{{ template "common.names.fullname" . }}-metrics"} * 100
              /
              redis_memory_max_bytes{service="{{ template "common.names.fullname" . }}-metrics"}
              > 90
            for: 2m
            labels:
              severity: error
            annotations:
              summary: Redis&reg; instance {{ "{{ $labels.instance }}" }} is using too much memory
              description: |
                Redis&reg; instance {{ "{{ $labels.instance }}" }} is using {{ "{{ $value }}" }}% of its available memory.
          - alert: RedisKeyEviction
            expr: |
              increase(redis_evicted_keys_total{service="{{ template "common.names.fullname" . }}-metrics"}[5m]) > 0
            for: 1s
            labels:
              severity: error
            annotations:
              summary: Redis&reg; instance {{ "{{ $labels.instance }}" }} has evicted keys
              description: |
                Redis&reg; instance {{ "{{ $labels.instance }}" }} has evicted {{ "{{ $value }}" }} keys in the last 5 minutes.
