#cloud-config
users:
  - name: zot
    system: true
  - name: devops
    sudo: ALL=(ALL) NOPASSWD:ALL
    shell: /bin/bash
    ssh_authorized_keys:
      - ${sshPublicKey}
apt:
  preserve_sources_list: true
  sources:
packages:
  - fail2ban
  - snapd
  - ufw
package_update: true
package_upgrade: true

write_files:
- path: /etc/systemd/system/zot.service
  permissions: '0600'
  owner: root:root
  content: |
    [Unit]
    Description=OCI Distribution Registry
    Documentation=https://zotregistry.dev/
    After=network.target auditd.service local-fs.target

    [Service]
    Type=simple
    AmbientCapabilities=CAP_NET_BIND_SERVICE
    ExecStart=/usr/bin/zot serve /etc/zot/config.json
    Restart=on-failure
    User=zot
    Group=zot
    LimitNOFILE=500000
    MemoryHigh=3G
    MemoryMax=3G
    Environment="AWS_ACCESS_KEY_ID=${awsAccessKeyId}"
    Environment="AWS_SECRET_ACCESS_KEY=${awsSecretAccessKey}"

    [Install]
    WantedBy=multi-user.target
- path: /etc/zot/htpasswd
  permissions: '0644'
  owner: root:root
  content: |
    ${indent(4, zotHtpasswd)}
- path: /etc/zot/config.json
  permissions: '0644'
  owner: root:root
  content: |
    ${indent(4, zotConfig)}

runcmd:
  - printf "[sshd]\nenabled = true\nbanaction = iptables-multiport" > /etc/fail2ban/jail.local
  - systemctl enable fail2ban
  - sed -i -e '/^\(#\|\)PermitRootLogin/s/^.*$/PermitRootLogin no/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)PasswordAuthentication/s/^.*$/PasswordAuthentication no/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)KbdInteractiveAuthentication/s/^.*$/KbdInteractiveAuthentication no/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)ChallengeResponseAuthentication/s/^.*$/ChallengeResponseAuthentication no/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)MaxAuthTries/s/^.*$/MaxAuthTries 10/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)AllowTcpForwarding/s/^.*$/AllowTcpForwarding no/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)X11Forwarding/s/^.*$/X11Forwarding no/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)AllowAgentForwarding/s/^.*$/AllowAgentForwarding no/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)AuthorizedKeysFile/s/^.*$/AuthorizedKeysFile .ssh\/authorized_keys/' /etc/ssh/sshd_config
  - sed -i '$a AllowUsers devops' /etc/ssh/sshd_config
#   - # By default, deny all incoming traffic and allow outgoing traffic.
  - ufw default deny incoming
  - ufw default allow outgoing
  - ufw allow ssh
  - ufw allow http
  - ufw allow https
  - ufw enable
  - mkdir -p /tmp/zot
  - wget -O /tmp/zot/zot-linux-arm64 https://github.com/project-zot/zot/releases/download/${zotVersion}/zot-linux-arm64
  - wget -O /tmp/zot/all-checksums https://github.com/project-zot/zot/releases/download/${zotVersion}/checksums.sha256.txt
  - cd /tmp/zot && grep zot-linux-arm64 all-checksums | grep -vE '(debug|minimal)' > SHASUM
  - cd /tmp/zot && sha256sum -c SHASUM && chmod +x zot-linux-arm64 && mv zot-linux-arm64 /usr/bin/zot
  - chown zot:zot /etc/zot/config.json
  - mkdir -p /data/zot && chown zot:zot /data/zot
  - mkdir -p /var/log/zot && chown zot:zot /var/log/zot && chmod 755 /var/log/zot
  - chown zot:zot /var/log/zot
  - snap install --classic certbot
  - ln -s /snap/bin/certbot /usr/bin/certbot
  - certbot certonly --standalone --domain registry.fzx-infra.dev -m sysadmin@zippelf.com --agree-tos --non-interactive --no-eff-email
  - chown -R root:zot /etc/letsencrypt
  - chmod -R 0750 /etc/letsencrypt
  - systemctl enable zot
  - reboot
