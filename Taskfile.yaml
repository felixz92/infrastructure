version: '3'

vars:
  ENVIRONMENT:
    sh: if [ -n "$ENVIRONMENT" ]; then echo "$ENVIRONMENT" ; else exit 1 ; fi
  CLUSTER_NAME:
    sh: if [ -n "$CLUSTER_NAME" ]; then echo "$CLUSTER_NAME" ; else exit 1 ; fi

includes:
  crossplane:
    taskfile: ./crossplane/Taskfile.yaml
    dir: ./crossplane

tasks:
  reconcile:
    cmds:
      - flux reconcile kustomization crds --with-source
      - flux reconcile kustomization crossplane
      - flux reconcile kustomization crossplane-addons
      - flux reconcile kustomization crossplane-custom-config
  destroy:
    cmds:
      - for ks in $(kubectl get kustomization --no-headers -o custom-columns=":metadata.name" -n flux-system); do flux suspend kustomization $ks ; done
      - kubectl --namespace traefik delete helmrelease traefik
      - for: ["domain", "observability", "traefik" ]
        cmd: kubectl delete kustomization {{ .ITEM }} -n flux-system
  apply-infra:
    cmds:
      - cd provision/{{ .ENVIRONMENT }}/{{ .CLUSTER_NAME }} && terraform apply

  bootstrap:
    cmds:
      - kubectl apply -f clusters/{{ .ENVIRONMENT }}/{{ .CLUSTER_NAME }}/system.yaml
      - flux reconcile kustomization crds --with-source
      - flux reconcile kustomization crossplane --with-source
      - flux reconcile kustomization flux-patch --with-source
  destroy-infra:
    cmds:
      - cd provision/{{ .ENVIRONMENT }}/{{ .CLUSTER_NAME }} && terraform state rm module.cluster.module.kubernetes.talos_machine_configuration_apply.worker
      - cd provision/{{ .ENVIRONMENT }}/{{ .CLUSTER_NAME }} && terraform state rm module.cluster.module.kubernetes.talos_machine_configuration_apply.control_plane
      - cd provision/{{ .ENVIRONMENT }}/{{ .CLUSTER_NAME }} && terraform state rm 'module.cluster.module.kubernetes.talos_machine_secrets.this'
      - cd provision/{{ .ENVIRONMENT }}/{{ .CLUSTER_NAME }} && terraform destroy