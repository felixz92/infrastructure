---
# Source: zot/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zot
  labels:
    app.kubernetes.io/name: zot
    app.kubernetes.io/instance: zot
    app.kubernetes.io/version: "v2.1.2"
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: zot
      app.kubernetes.io/instance: zot
  template:
    metadata:
      labels:
        app.kubernetes.io/name: zot
        app.kubernetes.io/instance: zot
    spec:
      serviceAccountName: zot
      securityContext:
        fsGroup: 65532
        runAsGroup: 65532
        runAsUser: 65532
      containers:
        - name: zot
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          image: "ghcr.io/project-zot/zot-linux-arm64:v2.1.2"
          imagePullPolicy: IfNotPresent
          env:
            - name: HEALTHCHECK_AUTH
              valueFrom:
                secretKeyRef:
                  key: HEALTHCHECK_AUTH
                  name: zot-liveness-secret
          envFrom:
            - secretRef:
                name: registry-s3-secret
          ports:
            - name: zot
              containerPort: 5000
              protocol: TCP
          volumeMounts:
            - mountPath: '/etc/zot'
              name: zot-config
            - mountPath: '/secret'
              name: zot-secret
            - mountPath: '/var/lib/registry'
              name: zot-volume
          livenessProbe:
            initialDelaySeconds: 5
            httpGet:
              path: /v2/
              port: 5000
              scheme: HTTP
              httpHeaders:
                - name: Authorization
                  value: "Basic ${HEALTHCHECK_AUTH}"
          readinessProbe:
            initialDelaySeconds: 5
            httpGet:
              path: /v2/
              port: 5000
              scheme: HTTP
              httpHeaders:
                - name: Authorization
                  value: "Basic ${HEALTHCHECK_AUTH}"
          startupProbe:
            initialDelaySeconds: 5
            periodSeconds: 10
            failureThreshold: 3
            httpGet:
              path: /v2/
              port: 5000
              scheme: HTTP
              httpHeaders:
                - name: Authorization
                  value: "Basic ${HEALTHCHECK_AUTH}"
          resources:
            requests:
              memory: "256Mi"
              cpu: "50m"
            limits:
              memory: "256Mi"
      volumes:
        - name: zot-config
          configMap:
            name: zot-config
        - name: zot-secret
          secret:
            secretName: zot-htpasswd
        - name: zot-volume
          emptyDir: {}
      dnsPolicy: ClusterFirst
